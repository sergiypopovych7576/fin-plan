// <auto-generated />
using System;
using FP.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FP.Infrastructure.Migrations
{
    [DbContext(typeof(BudgetDbContext))]
    [Migration("20241124123019_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FP.Domain.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1096cb8b-4749-452d-aa08-a655d30ce2df"),
                            Balance = 0m,
                            Currency = "$",
                            IsDefault = true,
                            Name = "Main"
                        });
                });

            modelBuilder.Entity("FP.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1d4e014-a973-4a3e-a421-2b955e11d33f"),
                            Color = "#8E44AD",
                            IconName = "trending_flat",
                            Name = "Transfer",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("975dcdee-463e-45ab-a9c7-b61a5db39746"),
                            Color = "#3366FF",
                            IconName = "paid",
                            Name = "Salary",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("6f5cd858-8065-40c1-938a-1d8213bd8c9c"),
                            Color = "#228B22",
                            IconName = "paid",
                            Name = "Investments",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("53610993-b452-4aa1-95a4-528bd4e3964c"),
                            Color = "#FFC300",
                            IconName = "paid",
                            Name = "Bonuses",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("4bd0535c-65ec-458a-af6b-bdf6e2112766"),
                            Color = "#2ECC71",
                            IconName = "paid",
                            Name = "Freelance",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("a2f0cc9b-ce0e-4134-861b-c9e2af759ff0"),
                            Color = "#8E44AD",
                            IconName = "savings",
                            Name = "Interest",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("1aedf196-748a-47d5-8f98-3e605d56ca52"),
                            Color = "#FFA500",
                            IconName = "house",
                            Name = "Rent",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("391b742e-b375-4f90-b1e2-c367dc81ad45"),
                            Color = "#EE4B2B",
                            IconName = "payments",
                            Name = "Bills",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("6cdd74dc-e30e-4eda-a738-6dfb0c3c2e47"),
                            Color = "#E74C3C",
                            IconName = "paid",
                            Name = "Loans",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("3f5b9dd5-7ab3-4872-947a-e24955a0b53d"),
                            Color = "#5D6D7E",
                            IconName = "subscriptions",
                            Name = "Subscriptions",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("39614ffb-5c28-47fb-8ef8-d00955318000"),
                            Color = "#D35400",
                            IconName = "medical_information",
                            Name = "Insurance",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("fd522056-8512-4a5c-9a87-6f1d53193af7"),
                            Color = "#27AE60",
                            IconName = "local_grocery_store",
                            Name = "Groceries",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("b51b9690-1c03-46c0-aa3f-d5113ca5b450"),
                            Color = "#C0392B",
                            IconName = "medical_information",
                            Name = "Health",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("e5e9f603-5f0c-4c57-93f0-d7ce03e1b8d0"),
                            Color = "#2980B9",
                            IconName = "school",
                            Name = "Education",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("1f950a9b-ca55-4dc1-b2d1-a443ff406216"),
                            Color = "#FF6347",
                            IconName = "redeem",
                            Name = "Presents",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("9fccf2dc-300f-4eea-ae49-94f990b696b9"),
                            Color = "#9B59B6",
                            IconName = "sports_esports",
                            Name = "Entertainment",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("c42eedc8-b1d8-44fd-ae0d-834dc523de24"),
                            Color = "#1ABC9C",
                            IconName = "drive_eta",
                            Name = "Transport",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("f6f14b4d-5418-4f40-9909-896428fa6d86"),
                            Color = "#E74C3C",
                            IconName = "restaurant",
                            Name = "Restaurants",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("3edb33ba-29f5-485b-ac98-b2755216644f"),
                            Color = "#8E44AD",
                            IconName = "fitness_center",
                            Name = "Hobby",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("b95c2a2c-800d-4e9b-bf02-309cfef03de1"),
                            Color = "#3498DB",
                            IconName = "local_taxi",
                            Name = "Taxi",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("1c258957-8e7a-4ed3-9594-5f5e3d9cea73"),
                            Color = "#F1C40F",
                            IconName = "call",
                            Name = "Communication",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("11fd6637-e7c1-42b1-a930-54f1781c6335"),
                            Color = "#16A085",
                            IconName = "pets",
                            Name = "Pets",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("f552e38a-642f-4e61-9ab6-0b4f64320e43"),
                            Color = "#F39C12",
                            IconName = "volunteer_activism",
                            Name = "Charity",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("6b5d325d-fd01-41cb-8cfb-6f8edec25867"),
                            Color = "#ffd014",
                            IconName = "shopping_cart",
                            Name = "Purchases",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("b10d0f9b-45d5-4913-9406-ca4e314f67ff"),
                            Color = "#0fa30f",
                            IconName = "people",
                            Name = "Family",
                            Type = 1
                        });
                });

            modelBuilder.Entity("FP.Domain.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<bool>("Applied")
                        .HasColumnType("boolean");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("DATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ScheduledOperationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SourceAccountId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("TargetAccountId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ScheduledOperationId");

                    b.HasIndex("SourceAccountId");

                    b.HasIndex("TargetAccountId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("FP.Domain.ScheduledOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("DATE");

                    b.Property<int>("Frequency")
                        .HasColumnType("integer");

                    b.Property<int>("Interval")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SourceAccountId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("DATE");

                    b.Property<Guid?>("TargetAccountId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SourceAccountId");

                    b.HasIndex("TargetAccountId");

                    b.ToTable("ScheduledOperations");
                });

            modelBuilder.Entity("FP.Domain.Operation", b =>
                {
                    b.HasOne("FP.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FP.Domain.ScheduledOperation", "ScheduledOperation")
                        .WithMany()
                        .HasForeignKey("ScheduledOperationId");

                    b.HasOne("FP.Domain.Account", "SourceAccount")
                        .WithMany()
                        .HasForeignKey("SourceAccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FP.Domain.Account", "TargetAccount")
                        .WithMany()
                        .HasForeignKey("TargetAccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("ScheduledOperation");

                    b.Navigation("SourceAccount");

                    b.Navigation("TargetAccount");
                });

            modelBuilder.Entity("FP.Domain.ScheduledOperation", b =>
                {
                    b.HasOne("FP.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FP.Domain.Account", "SourceAccount")
                        .WithMany()
                        .HasForeignKey("SourceAccountId");

                    b.HasOne("FP.Domain.Account", "TargetAccount")
                        .WithMany()
                        .HasForeignKey("TargetAccountId");

                    b.Navigation("Category");

                    b.Navigation("SourceAccount");

                    b.Navigation("TargetAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
